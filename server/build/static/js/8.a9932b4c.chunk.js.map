{"version":3,"sources":["hooks/use-input.js","pages/ProfilePage.js"],"names":["useInput","useState","enteredValue","setEnteredValue","value","valueChangeHandler","event","target","ProfilePage","handleModalText","useContext","ModalContext","history","useHistory","isEditing","setIsEditing","isLoading","setIsLoading","useEffect","localStorage","getItem","push","countryNames","setCountryNames","fetch","then","res","json","countryList","map","country","name","alpha3Code","catch","error","console","log","a","jwt_decode","id","_id","user","resultsFound","setUserData","result","Error","userData","address","setUserAddress","userAddress","setEnteredName","nameChangeHandler","surname","setEnteredSurname","surnameChangeHandler","street","streetChangeHandler","setEnteredStreet","province","provinceChangeHandler","setEnteredProvince","city","cityChangeHandler","setEnteredCity","setEnteredCountry","zip","zipChangeHandler","setEnteredZip","setLegacyData","errorMessages","setErrorMessages","handleForm","preventDefault","updatedUserData","countryCode","method","headers","body","JSON","stringify","message","split","showErrorMessages","showCountries","selected","LoadingOverlay","onSubmit","className","htmlFor","type","autoComplete","disabled","onChange","email","readOnly","required","placeholder","gender","length","class","role","onClick"],"mappings":"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","file":"static/js/8.a9932b4c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useInput = () => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n  return {\r\n    value: enteredValue,\r\n    valueChangeHandler,\r\n    setEnteredValue,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport ModalContext from \"../store/modal-context\";\r\n\r\nimport LoadingOverlay from \"../components/UI/LoadingOverlay\";\r\n\r\nimport useInput from \"../hooks/use-input\";\r\n\r\nconst ProfilePage = () => {\r\n  // For authentication\r\n  const { handleModalText } = useContext(ModalContext);\r\n  const history = useHistory();\r\n\r\n  // For handling editing and loading status\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Redirecting if not authorized\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"token\")) history.push(\"/\");\r\n  }, [history]);\r\n\r\n  // Fetching countries for dropdown\r\n  const [countryNames, setCountryNames] = useState([\"Loading...\"]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const countryList = res.map((country) => {\r\n          return [country.name, country.alpha3Code];\r\n        });\r\n        setCountryNames(countryList);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"En error ocurred: \" + error);\r\n      });\r\n  }, []);\r\n\r\n  // User data from LocalStorage\r\n  const [userData, setUserData] = useState(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { _id: id } = jwt_decode(localStorage.getItem(\"token\"));\r\n      // Get user and see if there's already an address\r\n      const res = await fetch(`/api/users/${id}`);\r\n      const user = await res.json();\r\n      if (user.resultsFound) {\r\n        setUserData(user.result);\r\n        setIsLoading(false);\r\n      } else {\r\n        throw new Error();\r\n      }\r\n    } catch (err) {\r\n      return {};\r\n    }\r\n  });\r\n\r\n  // Address info fetched from database, if existing\r\n  const [userAddress, setUserAddress] = useState(async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const { _id: id } = jwt_decode(localStorage.getItem(\"token\"));\r\n      // Get user and see if there's already an address\r\n      const res = await fetch(`/api/users/${id}`);\r\n      const user = await res.json();\r\n      if (user.resultsFound && user.result.address) {\r\n        setUserAddress(user.result.address);\r\n        setIsLoading(false);\r\n      } else {\r\n        throw new Error();\r\n      }\r\n    } catch (err) {\r\n      return {};\r\n    }\r\n  });\r\n\r\n  // Custom hook for inputs\r\n  const {\r\n    value: name,\r\n    setEnteredValue: setEnteredName,\r\n    valueChangeHandler: nameChangeHandler,\r\n  } = useInput(userData.name);\r\n\r\n  const {\r\n    value: surname,\r\n    setEnteredValue: setEnteredSurname,\r\n    valueChangeHandler: surnameChangeHandler,\r\n  } = useInput(userData.surname);\r\n\r\n  const {\r\n    value: street,\r\n    valueChangeHandler: streetChangeHandler,\r\n    setEnteredValue: setEnteredStreet,\r\n  } = useInput(userAddress.street);\r\n\r\n  const {\r\n    value: province,\r\n    valueChangeHandler: provinceChangeHandler,\r\n    setEnteredValue: setEnteredProvince,\r\n  } = useInput(userAddress.province);\r\n\r\n  const {\r\n    value: city,\r\n    valueChangeHandler: cityChangeHandler,\r\n    setEnteredValue: setEnteredCity,\r\n  } = useInput(userAddress.city);\r\n\r\n  const {\r\n    value: country,\r\n    // valueChangeHandler: countryChangeHandler,\r\n    setEnteredValue: setEnteredCountry,\r\n  } = useInput(userAddress.country);\r\n\r\n  const {\r\n    value: zip,\r\n    valueChangeHandler: zipChangeHandler,\r\n    setEnteredValue: setEnteredZip,\r\n  } = useInput(userAddress.zip);\r\n\r\n  const setLegacyData = () => {\r\n    setEnteredName(userData.name);\r\n    setEnteredSurname(userData.surname);\r\n    setEnteredStreet(userAddress.street);\r\n    setEnteredProvince(userAddress.province);\r\n    setEnteredCity(userAddress.city);\r\n    setEnteredCountry(userAddress.country);\r\n    setEnteredZip(userAddress.zip);\r\n  };\r\n\r\n  // This is necessary because userAdress if asynchronous\r\n  useEffect(() => {\r\n    setLegacyData();\r\n  }, [userAddress, userData]);\r\n\r\n  // Error messages shown in a box below form\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n  const handleEditButton = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleCancelButton = () => {\r\n    setErrorMessages([]);\r\n    setIsEditing(false);\r\n    setLegacyData();\r\n  };\r\n\r\n  // Send PUT request to modify data\r\n  const handleForm = async (event) => {\r\n    event.preventDefault();\r\n\r\n    let user;\r\n    // Get user first\r\n    try {\r\n      const res = await fetch(`/api/users/${userData._id}`);\r\n      user = await res.json();\r\n    } catch (err) {\r\n      handleModalText(\"Something went wrong\");\r\n    }\r\n\r\n    const updatedUserData = {\r\n      ...user.result,\r\n      name,\r\n      surname,\r\n      address: {\r\n        countryCode: country,\r\n        province,\r\n        city,\r\n        zip,\r\n        street,\r\n      },\r\n    };\r\n\r\n    setErrorMessages([]);\r\n    setIsLoading(true);\r\n    fetch(`/api/users/${userData._id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedUserData),\r\n    })\r\n      .then((res) => {\r\n        // // This is the token\r\n        // for (const header of res.headers) {\r\n        //   if (header[0] === \"x-auth-token\") {\r\n        //     console.log(header[1]);\r\n        //   }\r\n        // }\r\n        return res.json();\r\n      })\r\n      .then(async (res) => {\r\n        if (res.error) throw new Error(res.error);\r\n\r\n        // Reset error messages\r\n        setErrorMessages([]);\r\n\r\n        // No editing nor loading any more\r\n        setIsEditing(false);\r\n        setIsLoading(false);\r\n\r\n        // Redirect to home and show modal\r\n        history.push(\"/\");\r\n        handleModalText(\"Personal data changed successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        setIsLoading(false);\r\n        setErrorMessages(error.message.split(\",\"));\r\n        console.log(\"An error ocurred: \" + error.message);\r\n      });\r\n  };\r\n\r\n  // Showing all error messages coming from API\r\n  const showErrorMessages = errorMessages.map((error) => {\r\n    return <li>{error}</li>;\r\n  });\r\n\r\n  // Starting without error messages\r\n  useEffect(() => {\r\n    setErrorMessages([]);\r\n  }, []);\r\n\r\n  // Selecting either the current country from DB or Spain\r\n  const showCountries = countryNames.map((country) => {\r\n    if (\r\n      (userAddress.countryCode && country[1] === userAddress.countryCode) ||\r\n      (!userAddress.countryCode && country[0] === \"Spain\")\r\n    ) {\r\n      return (\r\n        <option selected id={country[1]} value={country[1]}>\r\n          {country[0]}\r\n        </option>\r\n      );\r\n    } else {\r\n      return (\r\n        <option id={country[1]} value={country[1]}>\r\n          {country[0]}\r\n        </option>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* Loading animation, PUT takes a bit of time */}\r\n      {isLoading && <LoadingOverlay />}\r\n      <form onSubmit={handleForm}>\r\n        <div className=\"overflow-hidden sm:rounded-md\">\r\n          <div className=\"px-4 py-5 sm:p-6\">\r\n            <div className=\"grid grid-cols-6 gap-6\">\r\n              <div className=\"col-span-6 sm:col-span-3\">\r\n                <label\r\n                  htmlFor=\"first_name\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  First name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"first_name\"\r\n                  id=\"first_name\"\r\n                  autoComplete=\"given-name\"\r\n                  disabled={!isEditing}\r\n                  value={isEditing ? name : userData.name}\r\n                  onChange={nameChangeHandler}\r\n                  className=\"mt-2 p-1 ring-1 ring-gray-300 placeholder-black focus:ring-yellow-500 focus:border-yellow-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-3\">\r\n                <label\r\n                  htmlFor=\"last_name\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  Last name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"last_name\"\r\n                  id=\"last_name\"\r\n                  autoComplete=\"family-name\"\r\n                  disabled={!isEditing}\r\n                  value={isEditing ? surname : userData.surname}\r\n                  onChange={surnameChangeHandler}\r\n                  className=\"mt-2 p-1 ring-1 ring-gray-300 placeholder-black focus:ring-yellow-500 focus:border-yellow-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-4\">\r\n                <label\r\n                  htmlFor=\"email_address\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  Email address\r\n                </label>\r\n                <input\r\n                  value={userData.email}\r\n                  readOnly\r\n                  type=\"text\"\r\n                  name=\"email_address\"\r\n                  id=\"email_address\"\r\n                  autoComplete=\"email\"\r\n                  className=\"bg-gray-100 mt-2 p-1 ring-1 ring-gray-300 focus:ring-yellow-500 focus:border-yellow-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-3\">\r\n                <label\r\n                  htmlFor=\"gender\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  Gender\r\n                </label>\r\n                <select\r\n                  id=\"gender\"\r\n                  name=\"gender\"\r\n                  autoComplete=\"sex\"\r\n                  required\r\n                  placeholder=\"Gender\"\r\n                  value={userData.gender}\r\n                  disabled={!isEditing}\r\n                  className={`${\r\n                    !isEditing && \"bg-gray-100\"\r\n                  } mt-1 block w-full py-2 px-3 border placeholder-black border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\r\n                >\r\n                  <option selected value=\"f\">\r\n                    Female\r\n                  </option>\r\n                  <option value=\"m\">Male</option>\r\n                  <option value=\"o\">Other</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-3\">\r\n                <label\r\n                  htmlFor=\"country\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  Country / Region\r\n                </label>\r\n                <select\r\n                  id=\"country\"\r\n                  name=\"country\"\r\n                  autoComplete=\"country\"\r\n                  required\r\n                  disabled={!isEditing}\r\n                  className={`${\r\n                    !isEditing && \"bg-gray-100\"\r\n                  } mt-1 block w-full py-2 px-3 border  placeholder-black border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\r\n                >\r\n                  {showCountries}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-span-6\">\r\n                <label\r\n                  htmlFor=\"street\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  Street address\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"street\"\r\n                  id=\"street\"\r\n                  required\r\n                  autoComplete=\"street-address\"\r\n                  disabled={!isEditing}\r\n                  value={isEditing ? street : userAddress.street}\r\n                  onChange={streetChangeHandler}\r\n                  className=\"mt-2 p-1 ring-1 ring-gray-300 placeholder-black focus:ring-yellow-500 focus:border-yellow-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-6 lg:col-span-2\">\r\n                <label\r\n                  htmlFor=\"city\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  City\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  id=\"city\"\r\n                  required\r\n                  disabled={!isEditing}\r\n                  value={isEditing ? city : userAddress.city}\r\n                  onChange={cityChangeHandler}\r\n                  className=\"mt-2 p-1 ring-1 ring-gray-300 placeholder-black focus:ring-yellow-500 focus:border-yellow-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\r\n                <label\r\n                  htmlFor=\"state\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  State / Province\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"state\"\r\n                  id=\"state\"\r\n                  required\r\n                  disabled={!isEditing}\r\n                  value={isEditing ? province : userAddress.province}\r\n                  onChange={provinceChangeHandler}\r\n                  className=\"mt-2 p-1 ring-1 ring-gray-300 placeholder-black focus:ring-yellow-500 focus:border-yellow-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\r\n                <label\r\n                  htmlFor=\"postal_code\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  ZIP / Postal\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"postal_code\"\r\n                  id=\"postal_code\"\r\n                  autoComplete=\"postal-code\"\r\n                  required\r\n                  disabled={!isEditing}\r\n                  value={isEditing ? zip : userAddress.zip}\r\n                  onChange={zipChangeHandler}\r\n                  className=\"mt-2 p-1 ring-1 ring-gray-300 placeholder-black focus:ring-yellow-500 focus:border-yellow-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Error messages */}\r\n          {errorMessages.length > 0 && (\r\n            <div\r\n              class=\"mx-5 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\r\n              role=\"alert\"\r\n            >\r\n              <h4 className=\"font-bold text-xl\">Wrong data</h4>\r\n              <ul className=\"ml-5 list-disc\">{showErrorMessages}</ul>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"px-4 text-right sm:px-6\">\r\n            {!isEditing && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"inline-flex justify-center py-2 px-4 my-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\r\n                onClick={handleEditButton}\r\n              >\r\n                Edit\r\n              </button>\r\n            )}\r\n            {isEditing && (\r\n              <>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"inline-flex justify-center py-2 px-4 my-2 ml-3 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-yellow-600 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\r\n                  onClick={handleCancelButton}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"inline-flex justify-center py-2 px-4 my-2  ml-3 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"sourceRoot":""}