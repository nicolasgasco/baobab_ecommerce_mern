{"version":3,"sources":["components/Cart/CheckoutForm.module.css","components/Cart/CheckoutForm.js"],"names":["module","exports","CheckoutForm","useContext","CartContext","items","saveOrder","history","userAddress","useHistory","useState","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","paymentIntent","useHttp","sendRequest","useEffect","url","method","headers","body","data","handleChange","event","a","empty","message","handleSubmit","ev","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","payload","userId","jwt_decode","localStorage","getItem","_id","push","className","style","maxWidth","onSubmit","styles","input","options","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","onChange","id","role","src","alt"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,MAAQ,4BAA4B,iBAAiB,qCAAqC,OAAS,6BAA6B,aAAa,iCAAiC,eAAe,mCAAmC,yBAAyB,6CAA6C,OAAS,6BAA6B,QAAU,8BAA8B,QAAU,gC,iMCYrc,SAASC,IACtB,MAA0CC,qBAAWC,KAA7CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAETC,GAFN,EAA0BC,YAEVC,eAEhB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACMC,EAASC,sBACTC,EAAWC,wBAEIC,EAAkBC,cAA/BC,YAERC,qBAAU,WASRH,EACE,CACEI,IAAK,qBACLC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM,CAAE3B,WAfgB,SAAC4B,GAC3Bb,EAAgBa,EAAKd,iBAGH,WAClBH,GAAc,QAef,CAACX,EAAOoB,IAEX,IAkBMS,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAGnBlB,EAAYiB,EAAME,OAClBvB,EAASqB,EAAMtB,MAAQsB,EAAMtB,MAAMyB,QAAU,IAJ1B,2CAAH,sDAOZC,EAAY,uCAAG,WAAOC,GAAP,iBAAAJ,EAAA,6DACnBI,EAAGC,iBACHzB,GAAc,GAFK,SAIGK,EAAOqB,mBAAmBvB,EAAc,CAC5DwB,eAAgB,CACdC,KAAMrB,EAASsB,WAAWC,kBANX,QAIbC,EAJa,QAUPlC,OACVC,EAAS,kBAAD,OAAmBiC,EAAQlC,MAAMyB,UACzCtB,GAAc,KAERgC,EAASC,YAAWC,aAAaC,QAAQ,UAAUC,IACzD9C,EAAU0C,EAAQ3C,GAClBS,EAAS,MACTE,GAAc,GACdJ,GAAa,GACbL,EAAQ8C,KAAK,aAnBI,2CAAH,sDAuBlB,OACE,sBAAKC,UAAU,iBAAiBC,MAAO,CAAEC,SAAU,SAAnD,UACE,qBAAKF,UAAU,mBAAf,SACE,qBAAKA,UAAU,4HAAf,SACE,cAAC,IAAD,CAAgBA,UAAU,cAG9B,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,0CAAd,mCAIF,uBAAMG,SAAUlB,EAAce,UAAW,SAAzC,UACE,cAAC,cAAD,CACEA,UAAS,UAAKI,IAAOC,OACrBC,QA/DU,CAChBL,MAAO,CACLM,KAAM,CACJC,MAAO,QACPC,WAAY,qBACZC,cAAe,cACfC,SAAU,OACV,gBAAiB,CACfH,MAAO,UAGXI,QAAS,CACPJ,MAAO,UACPK,UAAW,aAmDTC,SAAUlC,IAEZ,wBACEjB,SAAUF,GAAcE,GAAYN,EACpC2C,UAAS,UAAKI,IAAM,OAAX,YAAyBA,IAAM,QAF1C,SAIE,sBAAMJ,UAAWI,IAAO,eAAxB,SACG3C,EACC,qBAAKuC,UAAWI,IAAM,QAAaW,GAAG,YAEtC,cAMJ,qBACEf,UAAS,WACNzC,GAAS,YADH,uDAGTyD,KAAK,QAJP,SAMGzD,GAAgB,gBAUvB,qBAAKyC,UAAU,4BAAf,SACE,qBACEiB,IAAI,sGACJC,IAAI,4DACJlB,UAAU","file":"static/js/3.f42ca74e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CheckoutForm_root__1EsRl\",\"form\":\"CheckoutForm_form__1STSy\",\"input\":\"CheckoutForm_input__wcA4t\",\"result-message\":\"CheckoutForm_result-message__1x9OH\",\"hidden\":\"CheckoutForm_hidden__1YS0o\",\"card-error\":\"CheckoutForm_card-error__1Msw_\",\"card-element\":\"CheckoutForm_card-element__3JPdK\",\"payment-request-button\":\"CheckoutForm_payment-request-button__3Moir\",\"button\":\"CheckoutForm_button__TkFTp\",\"spinner\":\"CheckoutForm_spinner__tkQtG\",\"loading\":\"CheckoutForm_loading__2ae-_\"};","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport styles from \"./CheckoutForm.module.css\";\r\nimport { CreditCardIcon } from \"@heroicons/react/outline\";\r\n\r\nimport CartContext from \"../../store/cart-context\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nexport default function CheckoutForm() {\r\n  const { items, saveOrder, userAddress } = useContext(CartContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const { sendRequest: paymentIntent } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const handlePaymentIntent = (data) => {\r\n      setClientSecret(data.clientSecret);\r\n    };\r\n\r\n    const handleError = () => {\r\n      setProcessing(false);\r\n    };\r\n    // Create PaymentIntent as soon as the page loads\r\n    paymentIntent(\r\n      {\r\n        url: \"/api/order/payment\",\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: { items },\r\n      },\r\n      handlePaymentIntent,\r\n      handleError\r\n    );\r\n  }, [items, paymentIntent]);\r\n\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"black\",\r\n        fontFamily: \"Roboto, sans-serif\",\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {\r\n          color: \"black\",\r\n        },\r\n      },\r\n      invalid: {\r\n        color: \"#EF4444\",\r\n        iconColor: \"#EF4444\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleChange = async (event) => {\r\n    // Listen for changes in the CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  const handleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n      },\r\n    });\r\n\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setProcessing(false);\r\n    } else {\r\n      const userId = jwt_decode(localStorage.getItem(\"token\"))._id;\r\n      saveOrder(userId, items);\r\n      setError(null);\r\n      setProcessing(false);\r\n      setSucceeded(true);\r\n      history.push(\"/success\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full mx-auto\" style={{ maxWidth: \"600px\" }}>\r\n      <div className=\"w-full pt-1 pb-5\">\r\n        <div className=\"bg-yellow-500 text-white overflow-hidden rounded-full w-20 h-20 -mt-16 mx-auto shadow-lg flex justify-center items-center\">\r\n          <CreditCardIcon className=\"w-2/3\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-10\">\r\n        <h2 className=\"text-center font-bold text-xl uppercase\">\r\n          Secure payment info\r\n        </h2>\r\n      </div>\r\n      <form onSubmit={handleSubmit} className={\"w-full\"}>\r\n        <CardElement\r\n          className={`${styles.input}`}\r\n          options={cardStyle}\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          disabled={processing || disabled || succeeded}\r\n          className={`${styles[\"submit\"]} ${styles[\"button\"]}`}\r\n        >\r\n          <span className={styles[\"button-text\"]}>\r\n            {processing ? (\r\n              <div className={styles[\"spinner\"]} id=\"spinner\"></div>\r\n            ) : (\r\n              \"Pay now\"\r\n            )}\r\n          </span>\r\n        </button>\r\n        {/* Show any error that happens when processing the payment */}\r\n        {\r\n          <div\r\n            className={`${\r\n              !error && \"invisible\"\r\n            } card-error text-center text-red-600 font-bold mt-2`}\r\n            role=\"alert\"\r\n          >\r\n            {error ? error : \"No error\"}\r\n          </div>\r\n        }\r\n        {/* Show a success message upon completion */}\r\n        {/* {succeeded && (\r\n          <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n            Payment succeeded!\r\n          </p>\r\n        )} */}\r\n      </form>\r\n      <div className=\"px- mt-6 flex justify-end\">\r\n        <img\r\n          src=\"https://res.cloudinary.com/ngasco/image/upload/v1623952029/bonsai_background/logo-stripe_ouoag3.png\"\r\n          alt=\"Logos of Visa, MasterCard, American Express, and Discover\"\r\n          className=\"w-1/3\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}