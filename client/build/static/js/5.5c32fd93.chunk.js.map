{"version":3,"sources":["components/Cart/OrderOverview.js","components/Cart/Orders.js"],"names":["OrderOverview","items","classes","useState","showRatingSystem","setShowRatingSystem","currentItem","setCurrentItem","ratingValue","setRatingValue","showSuccessRating","setShowSuccessRating","setShowErrorRating","setAlreadyRatedProducts","updateRating","useHttp","sendRequest","useEffect","getRatingValue","value","console","log","showRatingContent","id","indexOf","className","onClick","url","method","headers","body","rating","res","prevState","handleSubmitRating","type","showCartItems","map","item","index","src","pictures","alt","completeName","brand","productName","color","productGender","quantity","pricingInfo","price","String","fromCharCode","toFixed","_id","filter","el","fill","colSpan","Orders","orders","setOrders","fetchOrders","useContext","CartContext","userAddress","userToken","jwt_decode","localStorage","getItem","result","ordersFound","Error","formatDate","dateObj","Date","parse","date","getDate","month","getMonth","padStart","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","capitalizeOnlyFirst","word","charAt","toUpperCase","slice","showOrders","order","orderId","creationDate","street","zip","city","toLowerCase","province"],"mappings":"yJA+MeA,IAvMO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC9B,EAAgDC,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAkDN,mBAAS,IAA3D,mBAAOO,EAAP,KAA0BC,EAA1B,KACA,EAA+BR,mBAAS,IAA/BS,EAAT,oBACA,EAAoCT,mBAAS,IAApCU,EAAT,oBAEqBC,EAAiBC,cAA9BC,YAERC,qBAAU,WACRR,EAAe,KACd,IAGH,IAoBMS,EAAiB,SAACC,GACtBC,QAAQC,IAAIF,EAAO,YACnBV,EAAeU,IAsCXG,EAAoB,SAACC,GACzB,OAAuC,IAAnCb,EAAkBc,QAAQD,GACrB,mBAAGE,UAAU,YAAb,qCACqC,IAAnCf,EAAkBc,QAAQD,GAC5B,mBAAGE,UAAU,YAAb,+BAGL,qCACE,cAAC,IAAD,CAAcP,eAAgBA,IAC9B,wBACEQ,QAAS,kBA7CQ,SAACH,GAgB1BH,QAAQC,IAAIb,EAAa,SACrBA,GACFM,EACE,CACEa,IAAI,uBAAD,OAAyBJ,GAC5BK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM,CACJC,OAAQvB,KAzBa,SAACwB,GAC5BrB,GAAqB,SAACsB,GACpB,MAAM,GAAN,mBAAWA,GAAX,CAAsBV,OAExBV,GAAwB,SAACoB,GACvB,MAAM,GAAN,mBAAWA,GAAX,CAAsBV,UAIA,WACxBX,GAAmB,SAACqB,GAClB,MAAM,GAAN,mBAAWA,GAAX,CAAsBV,UAiCHW,CAAmBX,IAClCY,KAAK,SACLV,UAAU,4OAHZ,sBAYFW,EAAgBnC,EAAMoC,KAAI,SAACC,EAAMC,GACrC,OACE,qCACE,qBACEd,UAAS,sDADX,UAKE,oBAAIA,UAAU,6GAAd,SACE,qBACEe,IAAKF,EAAKG,SAAS,GAAGd,IACtBF,UAAU,sEACViB,IAAKJ,EAAKG,SAAS,GAAGC,QAI1B,oBAAIjB,UAAU,wFAAd,SACE,mBAAGA,UAAU,eAAb,mBAAgCa,EAAKK,aAAaC,MAAlD,YAA2DN,EAAKK,aAAaE,YAA7E,aAA6FP,EAAKK,aAAaG,MAA/G,aAAyHR,EAAKK,aAAaI,mBAG7I,oBAAItB,UAAU,yGAAd,SACE,qBAAKA,UAAU,iDAAf,SACE,4BAAIa,EAAKU,eAIb,oBAAIvB,UAAU,gDAAd,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAMA,UAAU,mCAAhB,mBACEa,EAAKW,YAAYC,OADnB,OAEGC,OAAOC,aAAa,KAFvB,gBAMJ,oBAAI3B,UAAU,yGAAd,SACE,sBAAMA,UAAU,mCAAhB,oBACEa,EAAKW,YAAYC,MAAQZ,EAAKU,UAC9BK,QAAQ,IAFV,OAEeF,OAAOC,aAAa,KAFnC,cAKF,qBAAI3B,UAAU,yGAAd,UACE,sBAAMA,UAAU,UAAhB,0BACA,cAAC,IAAD,CACEC,QAAS,kBA5HKH,EA4HkBe,EAAKgB,IA3H3ChD,IAAgBiB,GAAsB,KAAhBjB,GACxBD,GAAoB,SAAC4B,GAKnB,OAJIA,GACF1B,EAAe,KAGT0B,KAIZrB,GAAmB,SAACqB,GAClB,OAAO,YAAIA,GAAWsB,QAAO,SAACC,GAC5B,OAAOA,IAAOjC,QAGlBhB,EAAegB,QACfd,EAAe,GAjBQ,IAACc,GA6HdkC,KAAI,UACFrD,GAAoBE,IAAgBgC,EAAKgB,IACrC,UACA,SAEN7B,UAAS,4BA9Cf,eAEea,EAAKgB,MAiDnBlD,GAAoBE,IAAgBgC,EAAKgB,KACxC,oBACE7B,UAAS,sDADX,SAIE,oBACEiC,QAAS,EACTjC,UAAU,wFAFZ,SAIE,qBAAKA,UAAU,sBAAf,SACGH,EAAkBgB,EAAKgB,UAT9B,iBAEiBhB,EAAKgB,YAgB9B,OACE,mCACE,qBAAK7B,UAAS,iBAAYvB,GAA1B,SACE,wBAAOuB,UAAU,6BAAjB,UACE,gCACE,qBAAIA,UAAU,iEAAd,UACE,oBAAIA,UAAU,8HACd,oBAAIA,UAAU,wGAAd,qBAGA,oBAAIA,UAAU,wGAAd,sBAGA,oBAAIA,UAAU,6HAAd,kBAGA,oBAAIA,UAAU,wGAAd,mBAGA,oBAAIA,UAAU,wGAAd,uBAKJ,gCAAQW,a,gGCjHHuB,UAhFA,WACb,MAA4BxD,mBAAS,IAArC,mBAAOyD,EAAP,KAAeC,EAAf,KAEqBC,EAAgB/C,cAA7BC,YAEgB+C,qBAAWC,KAA3BC,YAERhD,qBAAU,WACR,IAAMiD,EAAYC,YAAWC,aAAaC,QAAQ,UAQlDP,EAAY,CAAEnC,IAAI,cAAD,OAAgBuC,EAAUZ,OAPf,SAACgB,GAE3B,GADAlD,QAAQC,IAAIiD,IACPA,EAAOC,YACV,MAAM,IAAIC,MAAM,oBAElBX,EAAUS,EAAOA,aAGlB,CAACR,IAEJ,IAAMW,EAAa,SAACC,GAClBA,EAAUC,KAAKC,MAAMF,GAErB,IAAMG,GADNH,EAAU,IAAIC,KAAKD,IACEI,UACfC,EAAQ5B,OAAOuB,EAAQM,WAAa,GAAGC,SAAS,EAAG,KACnDC,EAAOR,EAAQS,cAEfC,EAAOV,EAAQW,WACfC,EAAUZ,EAAQa,aAClBC,EAAUd,EAAQe,aAGxB,MADa,UAAMZ,EAAN,YAAcE,EAAd,YAAuBG,EAAvB,aAAgCE,EAAhC,YAAwCE,EAAxC,YAAmDE,EAAnD,MAQTE,EAAsB,SAACC,GAC3B,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,IAG7CC,EAAanC,EAAOvB,KAAI,SAAC2D,GAE7B,OADA5E,QAAQC,IAAI2E,EAAM/B,aAEhB,gCACE,qBAAIxC,UAAU,yBAAd,4BACkBuE,EAAMC,WAExB,qBAAIxE,UAAU,oBAAd,wBACc,IACZ,sBAAMA,UAAU,sBAAhB,SACGgD,EAAWuB,EAAME,mBAGtB,qBAAIzE,UAAU,oBAAd,qBACW,IACT,sBAAMA,UAAU,sBAAhB,mBACMiE,EAAoBM,EAAM/B,YAAYkC,QAD5C,aAEIH,EAAM/B,YAAYmC,IAFtB,aAvBgBT,EA0BKK,EAAM/B,YAAYoC,KAzBtCV,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,GAAGQ,eAsB9C,cAGkDZ,EAC9CM,EAAM/B,YAAYsC,gBAIxB,cAAC,IAAD,CAAerG,QAAQ,QAAQD,MAAO+F,EAAM/F,MAAOsB,GAAIyE,EAAMC,YApBrDD,EAAMC,SAXG,IAACN,KAoCxB,OACE,qCACE,oBAAIlE,UAAU,kFAAd,yBAGA,8BAAMsE","file":"static/js/5.5c32fd93.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { StarIcon } from \"@heroicons/react/outline\";\r\nimport RatingSystem from \"../UI/RatingSystem\";\r\n\r\n// Custom hook for querying APIK\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nconst OrderOverview = ({ items, classes }) => {\r\n  const [showRatingSystem, setShowRatingSystem] = useState(false);\r\n  const [currentItem, setCurrentItem] = useState(\"\");\r\n  const [ratingValue, setRatingValue] = useState(0);\r\n  const [showSuccessRating, setShowSuccessRating] = useState([]);\r\n  const [, setShowErrorRating] = useState([]);\r\n  const [, setAlreadyRatedProducts] = useState([]);\r\n\r\n  const { sendRequest: updateRating } = useHttp();\r\n\r\n  useEffect(() => {\r\n    setRatingValue(0);\r\n  }, []);\r\n\r\n  // When pressing star icon to show rating system\r\n  const handleStarButton = (id) => {\r\n    if (currentItem === id || currentItem === \"\") {\r\n      setShowRatingSystem((prevState) => {\r\n        if (prevState) {\r\n          setCurrentItem(\"\");\r\n        }\r\n\r\n        return !prevState;\r\n      });\r\n    }\r\n    // Remove from error list\r\n    setShowErrorRating((prevState) => {\r\n      return [...prevState].filter((el) => {\r\n        return el !== id;\r\n      });\r\n    });\r\n    setCurrentItem(id);\r\n    setRatingValue(0);\r\n  };\r\n\r\n  const getRatingValue = (value) => {\r\n    console.log(value, \"value is\");\r\n    setRatingValue(value);\r\n  };\r\n\r\n  const handleSubmitRating = (id) => {\r\n    const handleModifiedRating = (res) => {\r\n      setShowSuccessRating((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n      setAlreadyRatedProducts((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n    };\r\n\r\n    const handleErrorRating = () => {\r\n      setShowErrorRating((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n    };\r\n\r\n    console.log(ratingValue, \"value\");\r\n    if (ratingValue) {\r\n      updateRating(\r\n        {\r\n          url: `api/products/rating/${id}`,\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: {\r\n            rating: ratingValue,\r\n          },\r\n        },\r\n        handleModifiedRating,\r\n        handleErrorRating\r\n      );\r\n    }\r\n  };\r\n\r\n  const showRatingContent = (id) => {\r\n    if (showSuccessRating.indexOf(id) !== -1) {\r\n      return <p className=\"font-bold\">Your rating was saved!</p>;\r\n    } else if (showSuccessRating.indexOf(id) !== -1) {\r\n      return <p className=\"font-bold\">An error ocurred!</p>;\r\n    } else {\r\n      return (\r\n        <>\r\n          <RatingSystem getRatingValue={getRatingValue} />\r\n          <button\r\n            onClick={() => handleSubmitRating(id)}\r\n            type=\"button\"\r\n            className=\"inline-flex justify-center py-2 px-4 my-2  ml-3 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-yellow-600 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\r\n          >\r\n            Rate\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const showCartItems = items.map((item, index) => {\r\n    return (\r\n      <>\r\n        <tr\r\n          className={`h-24 border-gray-300 dark:border-gray-200 border-b `}\r\n          key={`item-${item._id}`}\r\n        >\r\n          {/* Image */}\r\n          <td className=\"hidden md:table-cell text-sm whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <img\r\n              src={item.pictures[0].url}\r\n              className=\"w-16 h-16 mx-auto object-contain rounded-full ring-2 ring-green-500\"\r\n              alt={item.pictures[0].alt}\r\n            />\r\n          </td>\r\n          {/* Description */}\r\n          <td className=\"text-sm whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <p className=\"mb-2 md:ml-4\">{`${item.completeName.brand} ${item.completeName.productName}, ${item.completeName.color}, ${item.completeName.productGender}`}</p>\r\n          </td>\r\n          {/* Quantity */}\r\n          <td className=\"text-center text-sm pr-6 whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <div className=\"relative flex flex-row justify-center w-12 h-8\">\r\n              <p>{item.quantity}</p>\r\n            </div>\r\n          </td>\r\n          {/* Unit price */}\r\n          <td className=\"pr-4 whitespace-no-wrap  hidden md:table-cell\">\r\n            <div className=\"text-center\">\r\n              <span className=\"text-xs lg:text-base font-medium\">{`${\r\n                item.pricingInfo.price\r\n              }${String.fromCharCode(160)}â‚¬`}</span>\r\n            </div>\r\n          </td>\r\n          {/* Total price */}\r\n          <td className=\"text-center text-sm pr-6 whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <span className=\"text-sm lg:text-base font-medium\">{`${(\r\n              item.pricingInfo.price * item.quantity\r\n            ).toFixed(2)}${String.fromCharCode(160)}â‚¬`}</span>\r\n          </td>\r\n          {/* Rate product */}\r\n          <td className=\"text-center text-sm pr-6 whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <span className=\"sr-only\">Rate product</span>\r\n            <StarIcon\r\n              onClick={() => handleStarButton(item._id)}\r\n              fill={`${\r\n                showRatingSystem && currentItem === item._id\r\n                  ? \"#FDE68A\"\r\n                  : \"#FFFF\"\r\n              }`}\r\n              className={`h-6 cursor-pointer`}\r\n            />\r\n          </td>\r\n        </tr>\r\n\r\n        {showRatingSystem && currentItem === item._id && (\r\n          <tr\r\n            className={`h-16 border-gray-300 dark:border-gray-200 border-b `}\r\n            key={`rating-${item._id}`}\r\n          >\r\n            <td\r\n              colSpan={6}\r\n              className=\"text-sm whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\"\r\n            >\r\n              <div className=\"flex justify-center\">\r\n                {showRatingContent(item._id)}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={`w-full ${classes}`}>\r\n        <table className=\"min-w-full overflow-x-auto\">\r\n          <thead>\r\n            <tr className=\"w-full h-16 border-gray-300 dark:border-gray-200 border-b py-8\">\r\n              <th className=\"w-2/12 hidden md:table-cell text-gray-600 dark:text-gray-400 font-normal pr-6 text-left text-sm tracking-normal leading-4\"></th>\r\n              <th className=\"w-5/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-6 text-sm tracking-normal leading-4\">\r\n                Product\r\n              </th>\r\n              <th className=\"w-1/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-6 text-sm tracking-normal leading-4\">\r\n                Quantity\r\n              </th>\r\n              <th className=\"w-1/12  text-center hidden md:table-cell text-gray-600 dark:text-gray-400 font-bold pr-6 text-sm tracking-normal leading-4\">\r\n                Unit\r\n              </th>\r\n              <th className=\"w-2/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-8 text-sm tracking-normal leading-4\">\r\n                Total\r\n              </th>\r\n              <th className=\"w-2/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-8 text-sm tracking-normal leading-4\">\r\n                Rate\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{showCartItems}</tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default OrderOverview;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport OrderOverview from \"./OrderOverview\";\r\n\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport CartContext from \"../../store/cart-context\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const { sendRequest: fetchOrders } = useHttp();\r\n\r\n  const { userAddress } = useContext(CartContext);\r\n\r\n  useEffect(() => {\r\n    const userToken = jwt_decode(localStorage.getItem(\"token\"));\r\n    const handleFetchedOrders = (result) => {\r\n      console.log(result);\r\n      if (!result.ordersFound) {\r\n        throw new Error(\"No results found\");\r\n      }\r\n      setOrders(result.result);\r\n    };\r\n    fetchOrders({ url: `/api/order/${userToken._id}` }, handleFetchedOrders);\r\n  }, [fetchOrders]);\r\n\r\n  const formatDate = (dateObj) => {\r\n    dateObj = Date.parse(dateObj);\r\n    dateObj = new Date(dateObj);\r\n    const date = dateObj.getDate();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, \"0\"); // Since getMonth() returns month from 0-11 not 1-12\r\n    const year = dateObj.getFullYear();\r\n\r\n    const hour = dateObj.getHours();\r\n    const minutes = dateObj.getMinutes();\r\n    const seconds = dateObj.getSeconds();\r\n\r\n    const dateStr = `${date}/${month}/${year} (${hour}:${minutes}:${seconds})`;\r\n    return dateStr;\r\n  };\r\n\r\n  const capitalizeWord = (word) => {\r\n    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n  };\r\n\r\n  const capitalizeOnlyFirst = (word) => {\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  };\r\n\r\n  const showOrders = orders.map((order) => {\r\n    console.log(order.userAddress);\r\n    return (\r\n      <div key={order.orderId}>\r\n        <h3 className=\"font-bold text-xl mt-6\">\r\n          Order number # {order.orderId}\r\n        </h3>\r\n        <h3 className=\"font-bold text-xl\">\r\n          Order sent:{\" \"}\r\n          <span className=\"font-normal text-sm\">\r\n            {formatDate(order.creationDate)}\r\n          </span>\r\n        </h3>\r\n        <h3 className=\"font-bold text-xl\">\r\n          Sent to:{\" \"}\r\n          <span className=\"font-normal text-sm\">\r\n            {`${capitalizeOnlyFirst(order.userAddress.street)}, ${\r\n              order.userAddress.zip\r\n            } ${capitalizeWord(order.userAddress.city)},  ${capitalizeOnlyFirst(\r\n              order.userAddress.province\r\n            )}`}\r\n          </span>\r\n        </h3>\r\n        <OrderOverview classes=\"mb-12\" items={order.items} id={order.orderId} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\r\n        Your orders\r\n      </h2>\r\n      <div>{showOrders}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"],"sourceRoot":""}