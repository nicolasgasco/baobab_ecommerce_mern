{"version":3,"sources":["components/Cart/OrderOverview.js","components/Cart/OrderSent.js"],"names":["OrderOverview","items","classes","useState","showRatingSystem","setShowRatingSystem","currentItem","setCurrentItem","ratingValue","setRatingValue","showSuccessRating","setShowSuccessRating","setShowErrorRating","setAlreadyRatedProducts","updateRating","useHttp","sendRequest","useEffect","getRatingValue","value","showRatingContent","id","indexOf","className","onClick","url","method","headers","body","rating","res","prevState","handleSubmitRating","type","showCartItems","map","item","index","src","pictures","alt","completeName","brand","productName","color","productGender","quantity","pricingInfo","price","String","fromCharCode","toFixed","_id","filter","el","fill","colSpan","OrderSent","lastOrder","useContext","CartContext","fetchLastOrder","Object","keys","length","setOrder","userToken","jwt_decode","localStorage","getItem","result","order","formatDate","dateObj","getDate","getMonth","padStart","getFullYear","orderId","href","Date"],"mappings":"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","file":"static/js/4.df67e38b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { StarIcon } from \"@heroicons/react/outline\";\r\nimport RatingSystem from \"../UI/RatingSystem\";\r\n\r\n// Custom hook for querying APIK\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nconst OrderOverview = ({ items, classes }) => {\r\n  const [showRatingSystem, setShowRatingSystem] = useState(false);\r\n  const [currentItem, setCurrentItem] = useState(\"\");\r\n  const [ratingValue, setRatingValue] = useState(0);\r\n  const [showSuccessRating, setShowSuccessRating] = useState([]);\r\n  const [, setShowErrorRating] = useState([]);\r\n  const [, setAlreadyRatedProducts] = useState([]);\r\n\r\n  const { sendRequest: updateRating } = useHttp();\r\n\r\n  useEffect(() => {\r\n    setRatingValue(0);\r\n  }, []);\r\n\r\n  // When pressing star icon to show rating system\r\n  const handleStarButton = (id) => {\r\n    if (currentItem === id || currentItem === \"\") {\r\n      setShowRatingSystem((prevState) => {\r\n        if (prevState) {\r\n          setCurrentItem(\"\");\r\n        }\r\n\r\n        return !prevState;\r\n      });\r\n    }\r\n    // Remove from error list\r\n    setShowErrorRating((prevState) => {\r\n      return [...prevState].filter((el) => {\r\n        return el !== id;\r\n      });\r\n    });\r\n    setCurrentItem(id);\r\n    setRatingValue(0);\r\n  };\r\n\r\n  const getRatingValue = (value) => {\r\n    setRatingValue(value);\r\n  };\r\n\r\n  const handleSubmitRating = (id) => {\r\n    const handleModifiedRating = (res) => {\r\n      setShowSuccessRating((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n      setAlreadyRatedProducts((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n    };\r\n\r\n    const handleErrorRating = () => {\r\n      setShowErrorRating((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n    };\r\n\r\n    if (ratingValue) {\r\n      updateRating(\r\n        {\r\n          url: `api/products/rating/${id}`,\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: {\r\n            rating: ratingValue,\r\n          },\r\n        },\r\n        handleModifiedRating,\r\n        handleErrorRating\r\n      );\r\n    }\r\n  };\r\n\r\n  const showRatingContent = (id) => {\r\n    if (showSuccessRating.indexOf(id) !== -1) {\r\n      return <p className=\"font-bold\">Your rating was saved!</p>;\r\n    } else if (showSuccessRating.indexOf(id) !== -1) {\r\n      return <p className=\"font-bold\">An error ocurred!</p>;\r\n    } else {\r\n      return (\r\n        <>\r\n          <RatingSystem getRatingValue={getRatingValue} />\r\n          <button\r\n            onClick={() => handleSubmitRating(id)}\r\n            type=\"button\"\r\n            className=\"inline-flex justify-center py-2 px-4 my-2  ml-3 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-yellow-600 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\r\n          >\r\n            Rate\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const showCartItems = items.map((item, index) => {\r\n    return (\r\n      <>\r\n        <tr\r\n          className={`h-24 border-gray-300 dark:border-gray-200 border-b `}\r\n          key={`item-${item._id}`}\r\n        >\r\n          {/* Image */}\r\n          <td className=\"hidden md:table-cell text-sm whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <img\r\n              src={item.pictures[0].url}\r\n              className=\"w-16 h-16 mx-auto object-contain rounded-full ring-2 ring-green-500\"\r\n              alt={item.pictures[0].alt}\r\n            />\r\n          </td>\r\n          {/* Description */}\r\n          <td className=\"text-sm whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <p className=\"mb-2 md:ml-4\">{`${item.completeName.brand} ${item.completeName.productName}, ${item.completeName.color}, ${item.completeName.productGender}`}</p>\r\n          </td>\r\n          {/* Quantity */}\r\n          <td className=\"text-center text-sm pr-6 whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <div className=\"relative flex flex-row justify-center w-12 h-8\">\r\n              <p>{item.quantity}</p>\r\n            </div>\r\n          </td>\r\n          {/* Unit price */}\r\n          <td className=\"pr-4 whitespace-no-wrap  hidden md:table-cell\">\r\n            <div className=\"text-center\">\r\n              <span className=\"text-xs lg:text-base font-medium\">{`${\r\n                item.pricingInfo.price\r\n              }${String.fromCharCode(160)}€`}</span>\r\n            </div>\r\n          </td>\r\n          {/* Total price */}\r\n          <td className=\"text-center text-sm pr-6 whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <span className=\"text-sm lg:text-base font-medium\">{`${(\r\n              item.pricingInfo.price * item.quantity\r\n            ).toFixed(2)}${String.fromCharCode(160)}€`}</span>\r\n          </td>\r\n          {/* Rate product */}\r\n          <td className=\"text-center text-sm pr-6 whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <span className=\"sr-only\">Rate product</span>\r\n            <StarIcon\r\n              onClick={() => handleStarButton(item._id)}\r\n              fill={`${\r\n                showRatingSystem && currentItem === item._id\r\n                  ? \"#FDE68A\"\r\n                  : \"#FFFF\"\r\n              }`}\r\n              className={`h-6 cursor-pointer`}\r\n            />\r\n          </td>\r\n        </tr>\r\n\r\n        {showRatingSystem && currentItem === item._id && (\r\n          <tr\r\n            className={`h-16 border-gray-300 dark:border-gray-200 border-b `}\r\n            key={`rating-${item._id}`}\r\n          >\r\n            <td\r\n              colSpan={6}\r\n              className=\"text-sm whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\"\r\n            >\r\n              <div className=\"flex justify-center\">\r\n                {showRatingContent(item._id)}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={`w-full ${classes}`}>\r\n        <table className=\"min-w-full overflow-x-auto\">\r\n          <thead>\r\n            <tr className=\"w-full h-16 border-gray-300 dark:border-gray-200 border-b py-8\">\r\n              <th className=\"w-2/12 hidden md:table-cell text-gray-600 dark:text-gray-400 font-normal pr-6 text-left text-sm tracking-normal leading-4\"></th>\r\n              <th className=\"w-5/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-6 text-sm tracking-normal leading-4\">\r\n                Product\r\n              </th>\r\n              <th className=\"w-1/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-6 text-sm tracking-normal leading-4\">\r\n                Quantity\r\n              </th>\r\n              <th className=\"w-1/12  text-center hidden md:table-cell text-gray-600 dark:text-gray-400 font-bold pr-6 text-sm tracking-normal leading-4\">\r\n                Unit\r\n              </th>\r\n              <th className=\"w-2/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-8 text-sm tracking-normal leading-4\">\r\n                Total\r\n              </th>\r\n              <th className=\"w-2/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-8 text-sm tracking-normal leading-4\">\r\n                Rate\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{showCartItems}</tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default OrderOverview;\r\n","import { useContext, useState } from \"react\";\r\nimport OrderOverview from \"./OrderOverview\";\r\n\r\nimport CartContext from \"../../store/cart-context\";\r\nimport LoadingOverlay from \"../UI/LoadingOverlay\";\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nconst OrderSent = () => {\r\n  const { lastOrder } = useContext(CartContext);\r\n  const { sendRequest: fetchLastOrder } = useHttp();\r\n\r\n  const [order, setOrder] = useState(() => {\r\n    if (lastOrder && Object.keys(lastOrder).length > 0) {\r\n      setOrder(lastOrder);\r\n    } else {\r\n      const handleFetchedOrder = (result) => {\r\n        setOrder(result.result);\r\n      };\r\n      const userToken = jwt_decode(localStorage.getItem(\"token\"));\r\n\r\n      fetchLastOrder(\r\n        { url: `api/order/latest/${userToken._id}` },\r\n        handleFetchedOrder\r\n      );\r\n    }\r\n  });\r\n\r\n  const formatDate = (dateObj) => {\r\n    const date = dateObj.getDate();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, \"0\"); // Since getMonth() returns month from 0-11 not 1-12\r\n    const year = dateObj.getFullYear();\r\n\r\n    const dateStr = date + \"/\" + month + \"/\" + year;\r\n    return dateStr;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!order ? (\r\n        <LoadingOverlay />\r\n      ) : (\r\n        <div className={\"p-6\"}>\r\n          <div className=\"text-xl\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">{`Your order (${order.orderId}) was received!`}</h2>\r\n            <p className=\"mb-2 \">\r\n              You will receive confirmation via e-mail. You should receive your\r\n              order betweeen 2-5 working days depending on your location.\r\n            </p>\r\n            <p>\r\n              {\"For any query or doubt, contact with our \"}\r\n              <a\r\n                className=\"font-bold text-green-600 hover:underline\"\r\n                href=\"mailto:baobad@example.com\"\r\n              >\r\n                Customer support\r\n              </a>\r\n              {\".\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <h3 className=\"font-bold text-2xl\">{\"Order overview:\"}</h3>\r\n            <OrderOverview items={order.items} />\r\n            <h4 className=\"mt-8\">\r\n              <span className=\"font-bold\">Estimated arrival date: </span>\r\n              {`${formatDate(new Date())} - ${formatDate(new Date())}.`}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderSent;\r\n"],"sourceRoot":""}