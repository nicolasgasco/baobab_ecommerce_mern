{"version":3,"sources":["components/MainContent/Auth/LoginForm.js","components/MainContent/Auth/SignupForm.js","components/MainContent/Auth/AuthContent.js"],"names":["Loginform","emailInput","useRef","passwordInput","useContext","AuthContext","loginUser","handleOpenSignup","handleSubmit","event","a","preventDefault","email","current","value","password","className","src","BaobabLogo","alt","onClick","onSubmit","type","name","defaultValue","htmlFor","ref","id","autoComplete","required","placeholder","aria-hidden","SignupForm","nameInput","surnameInput","genderInput","repeatPasswordInput","signupUser","handleModalText","ModalContext","submitHandler","userData","surname","gender","selected","disabled","style","display","AuthContent","openLogin","checkLogin","useEffect"],"mappings":"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","file":"static/js/7.08557e9c.chunk.js","sourcesContent":["import { LockClosedIcon } from \"@heroicons/react/solid\";\r\nimport React, { useContext, useRef } from \"react\";\r\nimport BaobabLogo from \"../../../assets/img/baobab.svg\";\r\n\r\nimport AuthContext from \"../../../store/auth-context\";\r\n\r\nconst Loginform = () => {\r\n  const emailInput = useRef();\r\n  const passwordInput = useRef();\r\n\r\n  const { loginUser, handleOpenSignup } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await loginUser({\r\n      email: emailInput.current.value,\r\n      password: passwordInput.current.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <img\r\n            className=\"mx-auto h-12 w-auto\"\r\n            src={BaobabLogo}\r\n            alt=\"Illustration of baobab\"\r\n          />\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Sign in to your account\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            Or{\" \"}\r\n            <button\r\n              onClick={handleOpenSignup}\r\n              className=\"font-medium text-green-600 hover:text-green-500 cursor-pointer\"\r\n            >\r\n              sign up for a free account!\r\n            </button>\r\n          </p>\r\n        </div>\r\n        <form onSubmit={handleSubmit} className=\"mt-8 space-y-6 w-full\">\r\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\r\n          <div className=\"rounded-md shadow-sm\">\r\n            <div>\r\n              <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                ref={emailInput}\r\n                id=\"email-address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email address\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Password\r\n              </label>\r\n              <input\r\n                ref={passwordInput}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\r\n            >\r\n              <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                <LockClosedIcon\r\n                  className=\"h-5 w-5 text-green-500 group-hover:text-green-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </span>\r\n              Log in\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loginform;\r\n","import { LockClosedIcon } from \"@heroicons/react/solid\";\r\nimport { useRef, useContext } from \"react\";\r\nimport BaobabLogo from \"../../../assets/img/baobab.svg\";\r\n\r\nimport AuthContext from \"../../../store/auth-context\";\r\nimport ModalContext from \"../../../store/modal-context\";\r\n\r\nconst SignupForm = () => {\r\n  const nameInput = useRef();\r\n  const surnameInput = useRef();\r\n  const genderInput = useRef();\r\n  const emailInput = useRef();\r\n  const passwordInput = useRef();\r\n  const repeatPasswordInput = useRef();\r\n\r\n  const { signupUser } = useContext(AuthContext);\r\n  const { handleModalText } = useContext(ModalContext);\r\n\r\n  // const [logged, setLogged] = useState(isLogged);\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (passwordInput.current.value !== repeatPasswordInput.current.value) {\r\n      handleModalText(\"The two passwords don't match!\");\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      name: nameInput.current.value,\r\n      surname: surnameInput.current.value,\r\n      gender: genderInput.current.value,\r\n      email: emailInput.current.value,\r\n      password: passwordInput.current.value,\r\n    };\r\n    await signupUser(userData);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setLogged(isLogged);\r\n  // }, [isLogged]);\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <img\r\n            className=\"mx-auto h-12 w-auto\"\r\n            src={BaobabLogo}\r\n            alt=\"Illustration of baobab\"\r\n          />\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Sign up for a free account\r\n          </h2>\r\n          {/* <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            Or{\" \"}\r\n            <a className=\"font-medium text-green-600 hover:text-green-500 cursor-pointer\">\r\n              sign up for a free account!\r\n            </a>\r\n          </p> */}\r\n        </div>\r\n        <form onSubmit={submitHandler} className=\"mt-8 space-y-6\">\r\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"sr-only\">\r\n                Name\r\n              </label>\r\n              <input\r\n                ref={nameInput}\r\n                id=\"name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                autoComplete=\"given-name\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"surname\" className=\"sr-only\">\r\n                Surname\r\n              </label>\r\n              <input\r\n                ref={surnameInput}\r\n                id=\"surname\"\r\n                name=\"surname\"\r\n                type=\"text\"\r\n                autoComplete=\"family-name\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Surname\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div className=\"shorter-input\">\r\n              <label htmlFor=\"gender\" className=\"sr-only\">\r\n                Gender\r\n              </label>\r\n              <select\r\n                ref={genderInput}\r\n                id=\"gender\"\r\n                name=\"gender\"\r\n                autoComplete=\"sex\"\r\n                required\r\n                placeholder=\"Gender\"\r\n                className=\"appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\r\n              >\r\n                <option selected disabled style={{ display: \"none\" }}>\r\n                  Gender:\r\n                </option>\r\n                <option value=\"f\">Female</option>\r\n                <option value=\"m\">Male</option>\r\n                <option value=\"o\">Other</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                ref={emailInput}\r\n                id=\"email-address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email address\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Password\r\n              </label>\r\n              <input\r\n                ref={passwordInput}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"new-password\" className=\"sr-only\">\r\n                Repeat password\r\n              </label>\r\n              <input\r\n                ref={repeatPasswordInput}\r\n                id=\"new-password\"\r\n                name=\"new-password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Repeat password\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            {/* <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember_me\"\r\n                name=\"remember_me\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300 rounded\"\r\n              />\r\n              <label\r\n                htmlFor=\"remember_me\"\r\n                className=\"ml-2 block text-sm text-gray-900\"\r\n              >\r\n                Remember me\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"text-sm\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"font-medium text-green-600 hover:text-green-500\"\r\n              >\r\n                Forgot your password?\r\n              </a>\r\n            </div> */}\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\r\n            >\r\n              <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                <LockClosedIcon\r\n                  className=\"h-5 w-5 text-green-500 group-hover:text-green-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </span>\r\n              Sign in\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Loginform from \"./LoginForm\";\r\nimport SignupForm from \"./SignupForm\";\r\n\r\nimport AuthContext from \"../../../store/auth-context\";\r\n\r\nconst AuthContent = () => {\r\n  const { openLogin, checkLogin } = useContext(AuthContext);\r\n\r\n  // Check if user is still loggedin\r\n  useEffect(() => {\r\n    checkLogin();\r\n  }, [checkLogin]);\r\n\r\n  return <>{openLogin ? <Loginform /> : <SignupForm />}</>;\r\n};\r\n\r\nexport default AuthContent;\r\n"],"sourceRoot":""}