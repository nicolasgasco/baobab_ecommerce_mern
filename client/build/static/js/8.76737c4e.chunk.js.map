{"version":3,"sources":["components/Profile/PasswordChange.js"],"names":["PasswordChange","checkPassword","useContext","AuthContext","handleModalText","ModalContext","history","useHistory","useHttp","patchPassword","sendRequest","isLoading","setIsLoading","jwt_decode","localStorage","getItem","id","_id","email","useState","currentPassword","setCurrentPassword","passwordCorrect","setPasswordCorrect","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errorMessages","setErrorMessages","checkPasswordValidity","a","password","result","console","log","push","go","handleFormSubmit","event","preventDefault","handlePatchedUser","error","split","map","replaceAll","updatedCount","url","method","headers","body","showErrorMessages","charAt","toUpperCase","slice","className","onSubmit","htmlFor","type","name","autoComplete","disabled","value","onChange","target","onBlur","required","length","class","role","onClick"],"mappings":"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","file":"static/js/8.76737c4e.chunk.js","sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport ModalContext from \"../../store/modal-context\";\r\n\r\nimport LoadingOverlay from \"../UI/LoadingOverlay\";\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nconst PasswordChange = () => {\r\n  const { checkPassword } = useContext(AuthContext);\r\n  const { handleModalText } = useContext(ModalContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const { sendRequest: patchPassword, isLoading, setIsLoading } = useHttp();\r\n\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { _id: id, email } = jwt_decode(localStorage.getItem(\"token\"));\r\n\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [passwordCorrect, setPasswordCorrect] = useState(false);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n  const handleCurrentPassword = (event) => {\r\n    setPasswordCorrect(false);\r\n    setErrorMessages([]);\r\n    setCurrentPassword(event.target.value);\r\n  };\r\n\r\n  const handleConfirmPassword = (event) => {\r\n    setConfirmPassword(event.target.value);\r\n  };\r\n\r\n  const handleNewPassword = (event) => {\r\n    setNewPassword(event.target.value);\r\n  };\r\n\r\n  const checkPasswordValidity = async () => {\r\n    setErrorMessages([]);\r\n    if (passwordCorrect) return;\r\n    if (localStorage.getItem(\"token\")) {\r\n      setIsLoading(true);\r\n      try {\r\n        const result = await checkPassword({\r\n          email,\r\n          password: currentPassword,\r\n        });\r\n        if (result) {\r\n          setPasswordCorrect(!!result);\r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        setIsLoading(false);\r\n        setErrorMessages([\"Wrong password!\"]);\r\n      }\r\n    } else {\r\n      history.push(\"/\");\r\n      history.go(0);\r\n    }\r\n  };\r\n\r\n  const handleCancelButton = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    setErrorMessages([]);\r\n    event.preventDefault();\r\n    if (newPassword !== confirmPassword) {\r\n      setErrorMessages([\"The two passwords don't match\"]);\r\n    } else {\r\n      setIsLoading(true);\r\n      const handlePatchedUser = (result) => {\r\n        if (result.error) {\r\n          setIsLoading(false);\r\n          setErrorMessages(\r\n            result.error\r\n              .split(\"(Joi): \")[1]\r\n              .split(\",\")\r\n              .map((error) => {\r\n                return error.replaceAll('\"', \"\");\r\n              })\r\n          );\r\n        }\r\n        if (result.updatedCount === 1) {\r\n          setIsLoading(false);\r\n          handleModalText(\"Password changed!\");\r\n        }\r\n      };\r\n\r\n      patchPassword(\r\n        {\r\n          url: `/api/users/${id}`,\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: { password: confirmPassword },\r\n        },\r\n        handlePatchedUser\r\n      );\r\n    }\r\n  };\r\n\r\n  // Showing all error messages coming from API\r\n  const showErrorMessages = errorMessages.map((error) => {\r\n    return <li>{error.charAt(0).toUpperCase() + error.slice(1)}</li>;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingOverlay />}\r\n      <div className=\"md:col-span-1\">\r\n        <div className=\"md:col-span-2\">\r\n          <form onSubmit={handleFormSubmit}>\r\n            <div className=\"overflow-hidden sm:rounded-md\">\r\n              <div className=\"px-4 py-5 bg-white sm:p-6\">\r\n                <div className=\"grid grid-cols-6 gap-6\">\r\n                  <div className=\"col-span-6 sm:col-span-4\">\r\n                    <label\r\n                      htmlFor=\"email_address\"\r\n                      className=\"block text-sm font-medium text-gray-700\"\r\n                    >\r\n                      Current password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"current-password\"\r\n                      id=\"current-password\"\r\n                      autoComplete=\"current-password\"\r\n                      disabled={passwordCorrect}\r\n                      value={currentPassword}\r\n                      onChange={handleCurrentPassword}\r\n                      onBlur={checkPasswordValidity}\r\n                      className={`mt-2 p-1 ring-1 ring-gray-300 placeholder-black focus:ring-yellow-500 focus:border-yellow-500 block w-full shadow-sm sm:text-sm border-gray-300 ${\r\n                        passwordCorrect\r\n                          ? \"bg-green-100 ring-green-900\"\r\n                          : currentPassword && \"bg-red-100 ring-red-900\"\r\n                      } rounded-md`}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={`col-span-6 sm:col-span-3 ${\r\n                      !passwordCorrect && \"hidden\"\r\n                    }`}\r\n                  >\r\n                    <label\r\n                      htmlFor=\"first_name\"\r\n                      className=\"block text-sm font-medium text-gray-700\"\r\n                    >\r\n                      New password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"new-password\"\r\n                      id=\"new-password\"\r\n                      autoComplete=\"new-password\"\r\n                      required\r\n                      disabled={!passwordCorrect}\r\n                      value={newPassword}\r\n                      onChange={handleNewPassword}\r\n                      className=\"mt-2 p-1 ring-1 ring-gray-300 placeholder-black focus:ring-yellow-500 focus:border-yellow-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`col-span-6 sm:col-span-3 ${\r\n                      !passwordCorrect && \"hidden\"\r\n                    }`}\r\n                  >\r\n                    <label\r\n                      htmlFor=\"last_name\"\r\n                      className=\"block text-sm font-medium text-gray-700\"\r\n                    >\r\n                      Confirm password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"confirm-password\"\r\n                      id=\"confirm-password\"\r\n                      autoComplete=\"new-password\"\r\n                      required\r\n                      disabled={!passwordCorrect}\r\n                      value={confirmPassword}\r\n                      onChange={handleConfirmPassword}\r\n                      className=\"mt-2 p-1 ring-1 ring-gray-300 placeholder-black focus:ring-yellow-500 focus:border-yellow-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Error messages */}\r\n              {errorMessages.length > 0 && (\r\n                <div\r\n                  class=\"mx-5 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\r\n                  role=\"alert\"\r\n                >\r\n                  <h4 className=\"font-bold text-xl\">Error</h4>\r\n                  <ul className=\"ml-5 list-disc\">{showErrorMessages}</ul>\r\n                </div>\r\n              )}\r\n              <div className=\"px-4 text-right sm:px-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"inline-flex justify-center py-2 px-4 ml-3 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-yellow-600 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\r\n                  onClick={handleCancelButton}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"inline-flex justify-center py-2 px-4 ml-3 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordChange;\r\n"],"sourceRoot":""}