{"version":3,"sources":["components/UI/RatingSystem.js","components/Cart/OrderOverview.js","components/Cart/Orders.js"],"names":["RatingSystem","classes","getRatingValue","notInteractive","ratingValue","useState","starRating","setStarRating","hoverStarRating","setHoverStarRating","useEffect","handleMouseLeave","showStars","map","number","className","onMouseEnter","undefined","onMouseLeave","onClick","value","xmlns","width","height","viewBox","fill","d","OrderOverview","items","showRatingSystem","setShowRatingSystem","currentItem","setCurrentItem","setRatingValue","showSuccessRating","setShowSuccessRating","setShowErrorRating","setAlreadyRatedProducts","updateRating","useHttp","sendRequest","console","log","showRatingContent","id","indexOf","url","method","headers","body","rating","res","prevState","handleSubmitRating","type","showCartItems","item","index","src","pictures","alt","completeName","brand","productName","color","productGender","quantity","pricingInfo","price","String","fromCharCode","toFixed","_id","filter","el","colSpan","Orders","orders","setOrders","fetchOrders","useContext","CartContext","userAddress","userToken","jwt_decode","localStorage","getItem","result","ordersFound","Error","formatDate","dateObj","Date","parse","date","getDate","month","getMonth","padStart","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","capitalizeOnlyFirst","word","charAt","toUpperCase","slice","showOrders","order","orderId","creationDate","street","zip","city","toLowerCase","province"],"mappings":"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","file":"static/js/6.97aa08ce.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst RatingSystem = ({\r\n  classes,\r\n  getRatingValue,\r\n  notInteractive,\r\n  ratingValue,\r\n}) => {\r\n  const [starRating, setStarRating] = useState(0);\r\n  const [hoverStarRating, setHoverStarRating] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setStarRating(0);\r\n  }, []);\r\n\r\n  const handleMouseEnter = (value) => {\r\n    setHoverStarRating(value);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoverStarRating(0);\r\n  };\r\n\r\n  const determineFillColor = (value) => {\r\n    // Not interactive version\r\n    if (notInteractive) {\r\n      return ratingValue >= value ? \"#F59E0B\" : \"#9CA3AF\";\r\n    } else {\r\n      if (hoverStarRating) {\r\n        return hoverStarRating >= value ? \"#FCD34D\" : \"#9CA3AF\";\r\n      } else {\r\n        return starRating >= value ? \"#F59E0B\" : \"#9CA3AF\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnClick = (value) => {\r\n    setStarRating(value);\r\n    getRatingValue(value);\r\n  };\r\n\r\n  const showStars = [1, 2, 3, 4, 5].map((number) => {\r\n    return (\r\n      <div\r\n        className={notInteractive ? \"pr-1\" : \"pr-4 lg:pr-2\"}\r\n        onMouseEnter={\r\n          notInteractive ? undefined : () => handleMouseEnter(number)\r\n        }\r\n        onMouseLeave={notInteractive ? undefined : handleMouseLeave}\r\n        onClick={notInteractive ? undefined : () => handleOnClick(number)}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={notInteractive ? 13 : 18}\r\n          height={notInteractive ? 12 : 17}\r\n          viewBox=\"0 0 14 13\"\r\n          fill=\"none\"\r\n        >\r\n          <path\r\n            d=\"M6.52447 0.463524C6.67415 0.00286841 7.32585 0.00286996 7.47553 0.463525L8.68386 4.18237C8.75079 4.38838 8.94277 4.52786 9.15938 4.52786H13.0696C13.554 4.52786 13.7554 5.14767 13.3635 5.43237L10.2001 7.73075C10.0248 7.85807 9.95149 8.08375 10.0184 8.28976L11.2268 12.0086C11.3764 12.4693 10.8492 12.8523 10.4573 12.5676L7.29389 10.2693C7.11865 10.1419 6.88135 10.1419 6.70611 10.2693L3.54267 12.5676C3.15081 12.8523 2.62357 12.4693 2.77325 12.0086L3.98157 8.28976C4.04851 8.08375 3.97518 7.85807 3.79994 7.73075L0.636495 5.43237C0.244639 5.14767 0.446028 4.52786 0.93039 4.52786H4.84062C5.05723 4.52786 5.24921 4.38838 5.31614 4.18237L6.52447 0.463524Z\"\r\n            fill={determineFillColor(number)}\r\n          />\r\n        </svg>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div className={`flex items-center ${classes}`}>{showStars}</div>;\r\n};\r\n\r\nexport default RatingSystem;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { StarIcon } from \"@heroicons/react/outline\";\r\nimport RatingSystem from \"../UI/RatingSystem\";\r\n\r\n// Custom hook for querying APIK\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nconst OrderOverview = ({ items, classes }) => {\r\n  const [showRatingSystem, setShowRatingSystem] = useState(false);\r\n  const [currentItem, setCurrentItem] = useState(\"\");\r\n  const [ratingValue, setRatingValue] = useState(0);\r\n  const [showSuccessRating, setShowSuccessRating] = useState([]);\r\n  const [, setShowErrorRating] = useState([]);\r\n  const [, setAlreadyRatedProducts] = useState([]);\r\n\r\n  const { sendRequest: updateRating } = useHttp();\r\n\r\n  useEffect(() => {\r\n    setRatingValue(0);\r\n  }, []);\r\n\r\n  // When pressing star icon to show rating system\r\n  const handleStarButton = (id) => {\r\n    if (currentItem === id || currentItem === \"\") {\r\n      setShowRatingSystem((prevState) => {\r\n        if (prevState) {\r\n          setCurrentItem(\"\");\r\n        }\r\n\r\n        return !prevState;\r\n      });\r\n    }\r\n    // Remove from error list\r\n    setShowErrorRating((prevState) => {\r\n      return [...prevState].filter((el) => {\r\n        return el !== id;\r\n      });\r\n    });\r\n    setCurrentItem(id);\r\n    setRatingValue(0);\r\n  };\r\n\r\n  const getRatingValue = (value) => {\r\n    console.log(value, \"value is\");\r\n    setRatingValue(value);\r\n  };\r\n\r\n  const handleSubmitRating = (id) => {\r\n    const handleModifiedRating = (res) => {\r\n      setShowSuccessRating((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n      setAlreadyRatedProducts((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n    };\r\n\r\n    const handleErrorRating = () => {\r\n      console.log(\"ERROR!!!\");\r\n      setShowErrorRating((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n    };\r\n\r\n    console.log(ratingValue, \"value\");\r\n    if (ratingValue) {\r\n      updateRating(\r\n        {\r\n          url: `api/products/rating/${id}`,\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: {\r\n            rating: ratingValue,\r\n          },\r\n        },\r\n        handleModifiedRating,\r\n        handleErrorRating\r\n      );\r\n    }\r\n  };\r\n\r\n  const showRatingContent = (id) => {\r\n    console.log(\"IDIDDD\", showSuccessRating.indexOf(id));\r\n    if (showSuccessRating.indexOf(id) !== -1) {\r\n      return <p className=\"font-bold\">Your rating was saved!</p>;\r\n    } else if (showSuccessRating.indexOf(id) !== -1) {\r\n      return <p className=\"font-bold\">An error ocurred!</p>;\r\n    } else {\r\n      return (\r\n        <>\r\n          <RatingSystem getRatingValue={getRatingValue} />\r\n          <button\r\n            onClick={() => handleSubmitRating(id)}\r\n            type=\"button\"\r\n            className=\"inline-flex justify-center py-2 px-4 my-2  ml-3 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-yellow-600 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\r\n          >\r\n            Rate\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const showCartItems = items.map((item, index) => {\r\n    return (\r\n      <>\r\n        <tr\r\n          className={`h-24 border-gray-300 dark:border-gray-200 border-b `}\r\n          key={`item-${item._id}`}\r\n        >\r\n          {/* Image */}\r\n          <td className=\"hidden md:table-cell text-sm whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <img\r\n              src={item.pictures[0].url}\r\n              className=\"w-16 h-16 mx-auto object-contain rounded-full ring-2 ring-green-500\"\r\n              alt={item.pictures[0].alt}\r\n            />\r\n          </td>\r\n          {/* Description */}\r\n          <td className=\"text-sm whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <p className=\"mb-2 md:ml-4\">{`${item.completeName.brand} ${item.completeName.productName}, ${item.completeName.color}, ${item.completeName.productGender}`}</p>\r\n          </td>\r\n          {/* Quantity */}\r\n          <td className=\"text-center text-sm pr-6 whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <div className=\"relative flex flex-row justify-center w-12 h-8\">\r\n              <p>{item.quantity}</p>\r\n            </div>\r\n          </td>\r\n          {/* Unit price */}\r\n          <td className=\"pr-4 whitespace-no-wrap  hidden md:table-cell\">\r\n            <div className=\"text-center\">\r\n              <span className=\"text-xs lg:text-base font-medium\">{`${\r\n                item.pricingInfo.price\r\n              }${String.fromCharCode(160)}€`}</span>\r\n            </div>\r\n          </td>\r\n          {/* Total price */}\r\n          <td className=\"text-center text-sm pr-6 whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <span className=\"text-sm lg:text-base font-medium\">{`${(\r\n              item.pricingInfo.price * item.quantity\r\n            ).toFixed(2)}${String.fromCharCode(160)}€`}</span>\r\n          </td>\r\n          {/* Rate product */}\r\n          <td className=\"text-center text-sm pr-6 whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\">\r\n            <span className=\"sr-only\">Rate product</span>\r\n            <StarIcon\r\n              onClick={() => handleStarButton(item._id)}\r\n              fill={`${\r\n                showRatingSystem && currentItem === item._id\r\n                  ? \"#FDE68A\"\r\n                  : \"#FFFF\"\r\n              }`}\r\n              className={`h-6 cursor-pointer`}\r\n            />\r\n          </td>\r\n        </tr>\r\n\r\n        {showRatingSystem && currentItem === item._id && (\r\n          <tr\r\n            className={`h-16 border-gray-300 dark:border-gray-200 border-b `}\r\n            key={`rating-${item._id}`}\r\n          >\r\n            <td\r\n              colSpan={6}\r\n              className=\"text-sm whitespace-no-wrap text-gray-800 dark:text-gray-100 tracking-normal leading-4\"\r\n            >\r\n              <div className=\"flex justify-center\">\r\n                {showRatingContent(item._id)}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={`w-full ${classes}`}>\r\n        <table className=\"min-w-full overflow-x-auto\">\r\n          <thead>\r\n            <tr className=\"w-full h-16 border-gray-300 dark:border-gray-200 border-b py-8\">\r\n              <th className=\"w-2/12 hidden md:table-cell text-gray-600 dark:text-gray-400 font-normal pr-6 text-left text-sm tracking-normal leading-4\"></th>\r\n              <th className=\"w-5/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-6 text-sm tracking-normal leading-4\">\r\n                Product\r\n              </th>\r\n              <th className=\"w-1/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-6 text-sm tracking-normal leading-4\">\r\n                Quantity\r\n              </th>\r\n              <th className=\"w-1/12  text-center hidden md:table-cell text-gray-600 dark:text-gray-400 font-bold pr-6 text-sm tracking-normal leading-4\">\r\n                Unit\r\n              </th>\r\n              <th className=\"w-2/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-8 text-sm tracking-normal leading-4\">\r\n                Total\r\n              </th>\r\n              <th className=\"w-2/12  text-center text-gray-600 dark:text-gray-400 font-bold pr-8 text-sm tracking-normal leading-4\">\r\n                Rate\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{showCartItems}</tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default OrderOverview;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport OrderOverview from \"./OrderOverview\";\r\n\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport CartContext from \"../../store/cart-context\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const { sendRequest: fetchOrders } = useHttp();\r\n\r\n  const { userAddress } = useContext(CartContext);\r\n\r\n  useEffect(() => {\r\n    const userToken = jwt_decode(localStorage.getItem(\"token\"));\r\n    console.log(\"fetching orders\");\r\n    const handleFetchedOrders = (result) => {\r\n      console.log(result);\r\n      if (!result.ordersFound) {\r\n        throw new Error(\"No results found\");\r\n      }\r\n      setOrders(result.result);\r\n    };\r\n    fetchOrders({ url: `/api/order/${userToken._id}` }, handleFetchedOrders);\r\n  }, [fetchOrders]);\r\n\r\n  const formatDate = (dateObj) => {\r\n    dateObj = Date.parse(dateObj);\r\n    dateObj = new Date(dateObj);\r\n    const date = dateObj.getDate();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, \"0\"); // Since getMonth() returns month from 0-11 not 1-12\r\n    const year = dateObj.getFullYear();\r\n\r\n    const hour = dateObj.getHours();\r\n    const minutes = dateObj.getMinutes();\r\n    const seconds = dateObj.getSeconds();\r\n\r\n    const dateStr = `${date}/${month}/${year} (${hour}:${minutes}:${seconds})`;\r\n    return dateStr;\r\n  };\r\n\r\n  const capitalizeWord = (word) => {\r\n    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n  };\r\n\r\n  const capitalizeOnlyFirst = (word) => {\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  };\r\n\r\n  const showOrders = orders.map((order) => {\r\n    console.log(order.userAddress);\r\n    return (\r\n      <div key={order.orderId}>\r\n        <h3 className=\"font-bold text-xl mt-6\">\r\n          Order number # {order.orderId}\r\n        </h3>\r\n        <h3 className=\"font-bold text-xl\">\r\n          Order sent:{\" \"}\r\n          <span className=\"font-normal text-sm\">\r\n            {formatDate(order.creationDate)}\r\n          </span>\r\n        </h3>\r\n        <h3 className=\"font-bold text-xl\">\r\n          Sent to:{\" \"}\r\n          <span className=\"font-normal text-sm\">\r\n            {`${capitalizeOnlyFirst(order.userAddress.street)}, ${\r\n              order.userAddress.zip\r\n            } ${capitalizeWord(order.userAddress.city)},  ${capitalizeOnlyFirst(\r\n              order.userAddress.province\r\n            )}`}\r\n          </span>\r\n        </h3>\r\n        <OrderOverview classes=\"mb-12\" items={order.items} id={order.orderId} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\r\n        Your orders\r\n      </h2>\r\n      <div>{showOrders}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"],"sourceRoot":""}